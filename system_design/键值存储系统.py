"""
分布式键值存储
1. 数据分区：使用一致性哈希使数据均匀分布在不同服务器上。
2. 数据复制：为了提升可用性和可靠性，数据必须在N个服务器上异步复制：
            当KEY映射到某个位置后,从这个位置开始的N个服务器都存储数据副本。
3. 一致性：确保数据副本间保持同步。
   N: 副本数量
   W: 一个写操作的成功，必须得到W个副本的确认。
   R：一个读操作的成功，必须得到R个副本的确认。
   N、W、R的配置取决于系统对一致性、读写性能之间的权衡。
   若 R = 1， W = N，则对快速读进行了优化。
   若 W = 1， R = N，则对快速写进行了优化。
   若 W + R > N，则保证了强一致性。

推荐的是《最终一致性模型》，是一种弱一致性模型，经过足够长的时间，所有的数据更新会传播，副本会变地一致。
解决不一致性：
a. 版本控制
b. 向量时钟

"""